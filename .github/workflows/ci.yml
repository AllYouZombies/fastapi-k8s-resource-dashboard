name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r requirements.txt
        
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Check formatting with black
      run: black --check app/
      
    - name: Check import sorting with isort
      run: isort --check-only app/

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-asyncio httpx
        pip install -r requirements.txt
        
    - name: Run tests
      run: pytest tests/ -v

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -f docker/Dockerfile -t k8s-resource-monitor:test .
        
    - name: Test Docker image
      run: |
        # Create minimal test environment
        echo "PROMETHEUS_URL=http://localhost:9090" > .env.test
        echo "K8S_IN_CLUSTER=false" >> .env.test
        
        # Start container
        docker run -d --name test-container \
          --env-file .env.test \
          -p 8080:8000 \
          k8s-resource-monitor:test
          
        # Wait for container to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:8080/health/liveness || exit 1
        
        # Cleanup
        docker stop test-container
        docker rm test-container